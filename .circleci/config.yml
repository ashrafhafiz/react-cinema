version: 2.1

executors:
  docker-executor:
    docker:
      - image: "circleci/node:12.18.3"

aliases:
  - &show-current-branch-name
    run:
      name: show current branch
      command: echo ${CIRCLE_BRANCH}
  - &restore-cache
    keys:
      - app-{{ checksum "package.json"}}
      - app-
  - &install-dependencies
    run:
      name: Install dependencies
      command: npm install
  - &save-cache
    paths:
      - node_modules
    key: app-{{ checksum "package.json"}}
  - &install-aws-cli
    run:
      name: Install AWS CLI
      working_directory: /
      command: |
        sudo apt-get -y -qq update
        sudo apt-get install -y awscli
        sudo apt-get install -y python-pip python-dev build-essential
  - &Build-Project
    run:
      name: Build Project
      command: |
        npm install
        npm run build
        cd build
        zip ../build.zip -r *.[^.]*
        echo "Build successful"

jobs:
  build:
    executor: docker-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *restore-cache
      - *install-dependencies
      - *save-cache

  deploy-to-aws-s3:
    executor: docker-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *install-aws-cli
      - *Build-Project
      - run:
          name: Deploy to AWS S3 Bucket
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then
              aws --region ${AWS_REGION} s3 sync ~/project/build s3://${AWS_AHVLABS_CINEMA_PROD_BUCKET} --delete
            elif [ "${CIRCLE_BRANCH}" == "staging" ]
            then
              aws --region ${AWS_REGION} s3 sync ~/project/build s3://${AWS_AHVLABS_CINEMA_STAG_BUCKET} --delete
            else
              aws --region ${AWS_REGION} s3 sync ~/project/build s3://${AWS_AHVLABS_CINEMA_DEV_BUCKET} --delete
            fi

  deploy-to-aws-cloudfront:
    executor: docker-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *install-aws-cli
      - *Build-Project
      - run:
          name: Deploy to AWS Cloudfront
          command: |
            aws configure set preview.cloudfront true
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then
              aws cloudfront create-invalidation --distribution-id ${AWS_AHVLABS_CINEMA_PROD_DISTRIBUTION_ID} --path /\*
            elif [ "${CIRCLE_BRANCH}" == "staging" ]
            then
              aws cloudfront create-invalidation --distribution-id ${AWS_AHVLABS_CINEMA_STAG_DISTRIBUTION_ID} --path /\*
            else
              aws cloudfront create-invalidation --distribution-id ${AWS_AHVLABS_CINEMA_DEV_DISTRIBUTION_ID} --path /\*
            fi

workflows:
  build_and_deploy:
    jobs:
      - build
      - deploy-to-aws-s3:
          requires:
            - build
          filters:
            branches:
              only:
                - development
                - staging
                - master
      - deploy-to-aws-cloudfront:
          requires:
            - deploy-to-aws-s3
          filters:
            branches:
              only:
                - development
                - staging
                - master
